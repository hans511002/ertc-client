#默认控制台输出【级别顺序:OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL】
collect.logs.dir=../logs

log4j.rootLogger=INFO,CONSOLE
##############################################################################################################
################配置各种日志打印适配器################
# log4j.appender.{适配器名}=适配器实现类
# log4j.appender.{适配器名}.layout=适配器输出内容格式化处理类
# log4j.appender.{适配器名}.layout.ConversionPattern=日志内容格式串（带宏）
# log4j.appender.{适配器名}.encoding=编码类型（默认UTF-8）
# log4j.appender.{适配器名}.threshold=适配器接收日志“级别门槛”
# log4j.appender.{适配器名}... 其他是各适配器个性配置
##控制台打印
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=com.ery.base.support.log4j.PatternLayoutExt
log4j.appender.CONSOLE.layout.ConversionPattern=%-5p[%d{MM/dd HH:mm:ss,SSS}][%l]- %T: %m%n
log4j.appender.CONSOLE.encoding=UTF-8
log4j.appender.CONSOLE.threshold=DEBUG
log4j.appender.CONSOLE.target=System.out

#按时间循环生成日期文件
log4j.appender.DR=org.apache.log4j.DailyRollingFileAppender
log4j.appender.DR.layout=com.ery.base.support.log4j.PatternLayoutExt
log4j.appender.DR.layout.ConversionPattern=%-5p[%d{MM/dd HH:mm:ss,SSS}][%l]- %T: %m%n
log4j.appender.DR.encoding=UTF-8
log4j.appender.DR.threshold=DEBUG
##文件名可带宏变量，系统将从System.getProperty(mac)获取，因此你的应用必须保证初始这个变量
log4j.appender.DR.file=${collect.logs.dir}/${logFileName}.log
log4j.appender.DR.datePattern='.'yyyy-MM-dd
##ps:此appender未支持最多保留某个时长，这种接口。需要自己扩展实现

#按大小生成文件
log4j.appender.SR=org.apache.log4j.RollingFileAppender
log4j.appender.SR.layout=com.ery.base.support.log4j.PatternLayoutExt
log4j.appender.SR.layout.ConversionPattern=%-5p[%d{MM/dd HH:mm:ss,SSS}][%l]- %T: %m%n
log4j.appender.SR.encoding=UTF-8
log4j.appender.SR.threshold=DEBUG
log4j.appender.SR.append=true
log4j.appender.SR.maxFileSize=1024K
log4j.appender.SR.file=${collect.logs.dir}/${logFileName}.log
#最多保留10份文件
log4j.appender.SR.maxBackupIndex=10

################其上是配置各种日志适配器###############
##############################################################################################################
##############################################################################################################
#############通过包名控制不同日志输出规则##############
## log4j.logger.{包路径}={级别}[,适配器列表]   【如果适配器与继承的默认重复，会造成日志输出两次】
## log4j.additivity.{包路径}=true|false        【标示是否继承rootLogger规则,默认为true】
############
##本项目包(继承默认在控制台输出且按日期循环输出至文件)
log4j.logger.com.tydic=DEBUG,CONSOLE,DR
log4j.additivity.com.tydic=false

##org.apache 包所有信息打印
log4j.logger.org.apache=ERROR
log4j.additivity.org.apache=true

#控制阿里巴巴的包的输出
log4j.logger.com.alibaba=WARN,CONSOLE
log4j.additivity.com.alibaba=false
